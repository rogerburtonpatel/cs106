#!/bin/bash

# does differentiable testing on a file: runs it through the uft wash, 
# translating it a level down each time and running vscheme. 
# if there's a break, it tells you when. 

SCHEMEFILE=""
FILETYPE=".scm"
order=("ho" "cl")

usage ()
{
    if [[ "$#" -ne 2 && "$#" -ne 1 ]]; then 
        echo "Usage: $0 scheme-file"
        exit 1
    fi



}

run ()
{

    # while (( $# > 0 )); do
    #     case $1 in 
    #         -"scm" | -"ho" | -"kn" | -"fo" | -"cl") FILETYPE="${1#-}" ; shift ;;
    #         *".scm" | *".ho" | *".kn" | *".fo" | *".cl") SCHEMEFILE=$1 ; shift ;;
    #         -*)  usage ; break ;;
    #         *)   break ;;
    #     esac
    # done

    canonical_out=$(vscheme "$SCHEMEFILE" 2>&1)

    extension="${SCHEMEFILE##*.}"

    for ((i=0; i<${#order[@]}; i++))
    do
        for ((j=i; j<${#order[@]}; j++))
        do
            translation="${order[i]}-${order[j]}"
            my_out=$(uft $translation $SCHEMEFILE | vscheme 2>&1)
            difference=$(diff <(echo "$canonical_out") <(echo "$my_out") 2>&1)
            if [[ "$?" -ne 0 ]]; then 
                >&2 echo "DIFFERENCE IN \"uft $translation\":\n $difference"
                exit 1
            else 
                echo "\"uft $translation $SCHEMEFILE | vscheme 2>&1\" passed the diff." 
            fi        
        done
    done

    my_out=$(uft "ho-vo" $SCHEMEFILE | svm 2>&1)
    difference=$(diff <(echo "$canonical_out") <(echo "$my_out") 2>&1)
    if [[ "$?" -ne 0 ]]; then 
        >&2 echo "DIFFERENCE IN \"uft ho-vo \":\n $difference"
        exit 1
    else 
        echo "\"uft "ho-vo" $SCHEMEFILE | svm     2>&1\" passed the diff." 
    fi
}

main ()
{
    usage $@
    SCHEMEFILE="$1"
    run $@
    echo "You survived the wash!"
}


main $@
