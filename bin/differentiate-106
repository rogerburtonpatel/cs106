#!/bin/bash

# does differentiable testing on a file: runs it through the uft wash, 
# translating it a level down each time and running vscheme. 
# if there's a break, it tells you when. 

# Usage: differentiate-106 

SCHEMEFILE=""
QUIET=false
FILETYPE=".scm"
translations=("ho-ho" "ho-cl" "ho-kn")

if [[ "$DIR106/bin/uft" -nt "$DIR106/build/predef-ho.vo" ]]; then
  echo 'UFT is newer than compiled predefined functions. running `make predef` in vscheme dir.'
  cd "$DIR106/src/vscheme"
  make predef
fi

usage ()
{
        echo "Usage: $0 scheme-file.[scm|ho] [-q]"
        exit 1

}

run ()
{
    while (( $# > 0 )); do
        case $1 in 
            -"q") QUIET=true ; shift ;;
            *".scm") shift ;;
            *)   usage ; break ;;
        esac
    done

    if $(grep -q "check-expect" $SCHEMEFILE); then 
        >&2 echo -en "\033[31mWARNING!!!\033[0m "
        >&2 echo     "Your target file contains \"check-expect\", "
        >&2 echo     "which uft-ho-kn turns into \"check\" and \"expect\", "
        >&2 echo     "which aren't recognized by vscheme."
        >&2 echo     "I'll skip translation to kn for now."
        translations=("ho-ho" "ho-cl")
    fi

    canonical_out=$(vscheme "$SCHEMEFILE" 2>&1)

    for ((i=0; i<${#translations[@]}; i++))
    do
        translation="${translations[i]}"
        my_out=$(uft $translation $SCHEMEFILE | vscheme 2>&1)
        difference=$(diff <(echo "$canonical_out") <(echo "$my_out") 2>&1)
        if [[ "$?" -ne 0 ]]; then 
            >&2 echo "DIFFERENCE IN \"uft $translation\":\n $difference"
            exit 1
        else 
            echo -n "\"uft $translation `basename $SCHEMEFILE` | "
            echo    "vscheme 2>&1\" passed the diff against vscheme output."
        fi        
    done

    my_out=$(run-ho-with-predef $SCHEMEFILE)
    difference=$(diff <(echo "$canonical_out") <(echo "$my_out") 2>&1)
    if [[ "$?" -ne 0 ]]; then 
        >&2 echo "DIFFERENCE IN \"run-ho-with-predef \":\n $difference"
        exit 1
    else 
        echo -n "\"run-ho-with-predef $SCHEMEFILE\""
        echo    " passed the diff against vscheme output." 
    fi
}

main ()
{
    SCHEMEFILE="$1"
    if $QUIET ; then 
        run $@ &> /dev/null
    else 
        run $@ 
        echo "You survived the wash!"
    fi
}


main $@
