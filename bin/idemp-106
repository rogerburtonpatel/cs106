#!/bin/bash
# 
# Purpose: tests idempotency of the uft. 
# 

## Usage: idemp-106
## 
## 
## 
## 
## author: rab
## date:  Sun Mar 12 03:30:21 EDT 2023


BASEDIR=$DIR106

SVMDIR=$BASEDIR/src/svm
UFTDIR=$BASEDIR/src/uft
TESTDIR=$BASEDIR/tests/idemp-106



build ()
{
    target="$1"
    cd "$BASEDIR/src/$target"

    output=`make 2>&1`
    if [[ "$?" -ne "0" ]]; then
        echo $output
        echo "Exiting on $target compilation failure."
        exit 1
    fi


}

numtests=0
numfail=0
FAILING=1

# for people wanting to make changes: $1, $2 are arguments to a function
update_failure () { 
    failure=$1
    testname=$2
    out=$3
    
    if [[ "$failure" -ne "0" ]]; then 
        >&2 echo "Failed test $testname"
        >&2 echo "Output: "
        >&2 echo "$out"
        numfail=$((numfail + 1))
        return 1
    fi
    return 0
    
}

run_one_test ()
{
    local operation=$1

        numtests=$((numtests + 1))
        out=$(bash -ce "$operation")
        update_failure $? $file "$out"
                                                  
}

shopt -s nullglob

run_tests () {
    for file in $TESTDIR/*.scm; do
        run_one_test "diff <(uft kn-kn $file 2>&1) <(uft kn-kn $file| uft kn-kn)"
    done

    for file in $TESTDIR/*.scm; do
        run_one_test "diff <(uft kn-vs $file 2>&1) <(uft kn-vs $file | uft vs-vs)"
    done

    for file in $TESTDIR/*.vs; do
        run_one_test "diff <(uft vs-vs $file 2>&1) <(uft vs-vs $file | uft vs-vs)"
    done


    if [[ "$numfail" -eq "0" ]]; then 
        echo "All tests passed."
    else 
        numpassed=$((numtests - $numfail))
        echo "$numpassed / $numtests tests passed. \
See above output for details."
        exit 1
    fi
}

main () {
    build "svm"
    build "uft"
    run_tests
}

main

shopt -u nullglob