(let ([r0 (lambda (r1 r2) 
             (let* ([r3 (lambda (r1 r2) 
                           (let* ([r3 CAPTURED-IN]
                                  [r4 0]
                                  [r5 r1]
                                  [r6 r3]
                                  [r7 r4]
                                  [r8 r5]
                                  [r6 (r6 r7 r8)]
                                  [r7 CAPTURED-IN]
                                  [r8 1]
                                  [r9 r1]
                                  [r10 r7]
                                  [r11 r8]
                                  [r12 r9]
                                  [r10 (r10 r11 r12)]
                                  [r11 r2]
                                  [r12 r10]
                                  [r13 r11]
                                  [r12 (r12 r13)]
                                  [r13 r6]
                                  [r14 r12]) 
                             (r13 r14)))]
                    [r4 '()]
                    [r5 (cons r2 r4)]
                    [r6 (cons r1 r5)]) 
               (mkclosure r3 r6)))]) 
  (set o r0))
(let ([r0 (lambda (r1) 
             (let ([r2 (null? r1)]) 
               (if r2 
                  '() 
                  (let* ([r3 (car r1)]
                         [r4 (cdr r1)]) 
                    (begin 
                       (let* ([r5 (lambda (r1 r2) 
                                     (let* ([r5 CAPTURED-IN]
                                            [r6 0]
                                            [r7 r1]
                                        ;     [r100 (begin (println r5) 1)]
                                            [r5 (r5 r6 r7)]
                                        ;     [r100 (begin (println r5) 1)] 
                                        ;     [r100 (begin (println r2) 1)]
                                            )
                                       (> r2 r5)))]
                              [r6 '()]
                              [r6 (cons r3 r6)]
                              [r5 (mkclosure r5 r6)]) 
                         (set r4 r5)) 
                       (let* ([r5 r4]
                              [r100 (begin (println r5) 1)]
                              [r6 o]
                              [r7 (lambda (r1) (not r1))]
                              [r8 r5]
                              [r9 r6]
                              [r10 r7]
                              [r11 r8]
                              [r9 (r9 r10 r11)]
                              [r10 append]
                              [r11 qsort]
                              [r12 filter]
                              [r13 r9]
                              [r14 r4]
                              [r15 r12]
                              [r16 r13]
                              [r17 r14]
                              [r15 (r15 r16 r17)]
                              [r16 r11]
                              [r17 r15]
                              [r16 (r16 r17)]
                              [r17 qsort]
                              [r18 filter]
                              [r19 r5]
                              [r20 r4]
                              [r21 r18]
                              [r22 r19]
                              [r23 r20]
                              [r21 (r21 r22 r23)]
                              [r22 r17]
                              [r23 r21]
                              [r22 (r22 r23)]
                              [r23 (cons r3 r22)]
                              [r24 r10]
                              [r25 r16]
                              [r26 r23]) 
                         (r24 r25 r26)))))))]) 
  (set qsort r0))
(let ([r0 (lambda (r1) 
             (let* ([r2 0]
                    [r3 (= r1 r2)]) 
               (if r3 
                  '() 
                  (let* ([r4 iota^]
                         [r5 1]
                         [r6 (- r1 r5)]
                         [r7 r4]
                         [r8 r6]
                         [r7 (r7 r8)]) 
                    (cons r1 r7)))))]) 
  (set iota^ r0))
(begin 
   (let* ([r0 qsort]
          [r1 65]
          [r2 15]
          [r3 87]
          [r4 42]
          [r5 62]
          [r6 45]
          [r7 6]
          [r8 81]
          [r9 53]
          [r10 34]
          [r11 33]
          [r12 82]
          [r13 79]
          [r14 7]
          [r15 17]
          [r16 39]
          [r17 71]
          [r18 18]
          [r19 98]
          [r20 92]
          [r21 77]
          [r22 41]
          [r23 51]
          [r24 16]
          [r25 86]
          [r26 30]
          [r27 49]
          [r28 10]
          [r29 4]
          [r30 68]
          [r31 35]
          [r32 52]
          [r33 69]
          [r34 12]
          [r35 85]
          [r36 36]
          [r37 47]
          [r38 5]
          [r39 1]
          [r40 61]
          [r41 74]
          [r42 64]
          [r43 31]
          [r44 80]
          [r45 25]
          [r46 29]
          [r47 93]
          [r48 78]
          [r49 72]
          [r50 24]
          [r51 99]
          [r52 48]
          [r53 76]
          [r54 19]
          [r55 66]
          [r56 70]
          [r57 3]
          [r58 56]
          [r59 23]
          [r60 32]
          [r61 84]
          [r62 100]
          [r63 91]
          [r64 58]
          [r65 20]
          [r66 60]
          [r67 26]
          [r68 37]
          [r69 97]
          [r70 54]
          [r71 46]
          [r72 13]
          [r73 21]
          [r74 63]
          [r75 28]
          [r76 14]
          [r77 59]
          [r78 67]
          [r79 38]
          [r80 88]
          [r81 57]
          [r82 40]
          [r83 55]
          [r84 94]
          [r85 11]
          [r86 95]
          [r87 22]
          [r88 44]
          [r89 27]
          [r90 9]
          [r91 83]
          [r92 50]
          [r93 43]
          [r94 8]
          [r95 90]
          [r96 73]
          [r97 75]
          [r98 96]
          [r99 89]
          [r100 2]
          [r101 '()]
          [r102 (cons r100 r101)]
          [r103 (cons r99 r102)]
          [r104 (cons r98 r103)]
          [r105 (cons r97 r104)]
          [r106 (cons r96 r105)]
          [r107 (cons r95 r106)]
          [r108 (cons r94 r107)]
          [r109 (cons r93 r108)]
          [r110 (cons r92 r109)]
          [r111 (cons r91 r110)]
          [r112 (cons r90 r111)]
          [r113 (cons r89 r112)]
          [r114 (cons r88 r113)]
          [r115 (cons r87 r114)]
          [r116 (cons r86 r115)]
          [r117 (cons r85 r116)]
          [r118 (cons r84 r117)]
          [r119 (cons r83 r118)]
          [r120 (cons r82 r119)]
          [r121 (cons r81 r120)]
          [r122 (cons r80 r121)]
          [r123 (cons r79 r122)]
          [r124 (cons r78 r123)]
          [r125 (cons r77 r124)]
          [r126 (cons r76 r125)]
          [r127 (cons r75 r126)]
          [r128 (cons r74 r127)]
          [r129 (cons r73 r128)]
          [r130 (cons r72 r129)]
          [r131 (cons r71 r130)]
          [r132 (cons r70 r131)]
          [r133 (cons r69 r132)]
          [r134 (cons r68 r133)]
          [r135 (cons r67 r134)]
          [r136 (cons r66 r135)]
          [r137 (cons r65 r136)]
          [r138 (cons r64 r137)]
          [r139 (cons r63 r138)]
          [r140 (cons r62 r139)]
          [r141 (cons r61 r140)]
          [r142 (cons r60 r141)]
          [r143 (cons r59 r142)]
          [r144 (cons r58 r143)]
          [r145 (cons r57 r144)]
          [r146 (cons r56 r145)]
          [r147 (cons r55 r146)]
          [r148 (cons r54 r147)]
          [r149 (cons r53 r148)]
          [r150 (cons r52 r149)]
          [r151 (cons r51 r150)]
          [r152 (cons r50 r151)]
          [r153 (cons r49 r152)]
          [r154 (cons r48 r153)]
          [r155 (cons r47 r154)]
          [r156 (cons r46 r155)]
          [r157 (cons r45 r156)]
          [r158 (cons r44 r157)]
          [r159 (cons r43 r158)]
          [r160 (cons r42 r159)]
          [r161 (cons r41 r160)]
          [r162 (cons r40 r161)]
          [r163 (cons r39 r162)]
          [r164 (cons r38 r163)]
          [r165 (cons r37 r164)]
          [r166 (cons r36 r165)]
          [r167 (cons r35 r166)]
          [r168 (cons r34 r167)]
          [r169 (cons r33 r168)]
          [r170 (cons r32 r169)]
          [r171 (cons r31 r170)]
          [r172 (cons r30 r171)]
          [r173 (cons r29 r172)]
          [r174 (cons r28 r173)]
          [r175 (cons r27 r174)]
          [r176 (cons r26 r175)]
          [r177 (cons r25 r176)]
          [r178 (cons r24 r177)]
          [r179 (cons r23 r178)]
          [r180 (cons r22 r179)]
          [r181 (cons r21 r180)]
          [r182 (cons r20 r181)]
          [r183 (cons r19 r182)]
          [r184 (cons r18 r183)]
          [r185 (cons r17 r184)]
          [r186 (cons r16 r185)]
          [r187 (cons r15 r186)]
          [r188 (cons r14 r187)]
          [r189 (cons r13 r188)]
          [r190 (cons r12 r189)]
          [r191 (cons r11 r190)]
          [r192 (cons r10 r191)]
          [r193 (cons r9 r192)]
          [r194 (cons r8 r193)]
          [r195 (cons r7 r194)]
          [r196 (cons r6 r195)]
          [r197 (cons r5 r196)]
          [r198 (cons r4 r197)]
          [r199 (cons r3 r198)]
          [r200 (cons r2 r199)]
          [r201 (cons r1 r200)]
          [r202 r0]
          [r203 r201]
          [r202 (r202 r203)]
          [r203 
                '(qsort 
'(65 
15 
87 
42 
62 
45 
6 
81 
53 
34 
33 
82 
79 
7 
17 
39 
71 
18 
98 
92 
77 
41 
51 
16 
86 
30 
49 
10 
4 
68 
35 
52 
69 
12 
85 
36 
47 
5 
1 
61 
74 
64 
31 
80 
25 
29 
93 
78 
72 
24 
99 
48 
76 
19 
66 
70 
3 
56 
23 
32 
84 
100 
91 
58 
20 
60 
26 
37 
97 
54 
46 
13 
21 
63 
28 
14 
59 
67 
38 
88 
57 
40 
55 
94 
11 
95 
22 
44 
27 
9 
83 
50 
43 
8 
90 
73 
75 
96 
89 
2))]) 
     (check r202 r203)) 
   (let* ([r0 reverse]
          [r1 iota^]
          [r2 100]
          [r3 r1]
          [r4 r2]
          [r3 (r3 r4)]
          [r4 r0]
          [r5 r3]
          [r4 (r4 r5)]
          [r5 '(reverse (iota^ 100))]) 
     (expect r4 r5)))
